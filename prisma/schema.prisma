// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum SellStatus {
  ENDED
  PROGRESS
  RETURNED
}

enum TransactionType {
  BUY
  SELL
  MINING
}

model User {
  id          String        @id @default(cuid())
  firstname   String?       @db.VarChar(50)
  lastname    String?       @db.VarChar(50)
  pseudo      String?       @db.VarChar(50)
  email       String        @unique @db.VarChar(255)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime?
  isActive    Boolean       @default(true)
  password    String        @db.VarChar(255)
  Transaction Transaction[]
}

// model ResourceType {
//   id         String     @id @default(cuid())
//   name       String     @unique
//   isActive   Boolean    @default(true)
//   createdAt  DateTime   @default(now())
//   modifiedAt DateTime?
//   Resources  Resource[]
// }

// model Resource {
//   id             String        @id @default(cuid())
//   name           String        @unique
//   value          Float         @default(0)
//   imageUrlId     String?
//   isActive       Boolean       @default(true)
//   createdAt      DateTime      @default(now())
//   modifiedAt     DateTime?
//   resourceTypeId String
//   resourceType   ResourceType  @relation(fields: [resourceTypeId], references: [id])
//   Transaction    Transaction[]
// }

model ItemCategory {
  id         String     @id @default(cuid())
  name       String     @unique
  isActive   Boolean    @default(true)
  createdAt  DateTime   @default(now())
  modifiedAt DateTime?
  ItemType   ItemType[]
}

model ItemType {
  id             String       @id @default(cuid())
  name           String       @unique
  isActive       Boolean      @default(true)
  isStackable    Boolean      @default(true)
  createdAt      DateTime     @default(now())
  modifiedAt     DateTime?
  itemCategoryId String
  itemCategory   ItemCategory @relation(fields: [itemCategoryId], references: [id])
  items          Item[]
}

model Item {
  id          String        @id @default(cuid())
  name        String        @unique
  value       Float         @default(0)
  imageUrlId  String?
  isActive    Boolean       @default(true)
  isLimied    Boolean       @default(false)
  createdAt   DateTime      @default(now())
  modifiedAt  DateTime?
  itemTypeId  String?
  ItemType    ItemType?     @relation(fields: [itemTypeId], references: [id])
  Transaction Transaction[]
}

model Transaction {
  id         String          @id @default(cuid())
  type       TransactionType
  sellStatus SellStatus?
  quantity   Int
  fee        Float?
  value      Int
  createdAt  DateTime        @default(now())
  modifiedAt DateTime?
  userId     String
  user       User            @relation(fields: [userId], references: [id])
  // resourceId String
  // resource   Resource        @relation(fields: [resourceId], references: [id])
  Item       Item?           @relation(fields: [itemId], references: [id])
  itemId     String
}
