{
  // Place your nextjs13-from-start workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  //  "scope": "javascript,typescript",
  //  "prefix": "log",
  //  "body": [
  //    "console.log('$1');",
  //    "$2"
  //  ],
  //  "description": "Log output to console"
  // }
  "Next page component with props": {
    "prefix": "npci",
    "body": [
      "interface I${1:${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}}Props {",
      "$2",
      "}",
      "",
      "function ${1:$TM_FILENAME_BASE}({$3}): React.ReactElement<I${1:${TM_FILENAME_BASE/(.*)/${1:/capitalize}/}}Props> {",
      "return <div>${1:$TM_FILENAME_BASE}</div>;",
      "}",
      "",
      "export default ${1:$TM_FILENAME_BASE};"
    ],
    "description": "Create function page component with interface and props"
  },
  "Next page component": {
    "prefix": "npc",
    "body": [
      "function ${1:$TM_FILENAME_BASE}(): React.ReactElement {",
      "return <div>${1:$TM_FILENAME_BASE}</div>;",
      "}",
      "",
      "export default ${1:$TM_FILENAME_BASE};"
    ],
    "description": "Create function page component without interface and props"
  }
}
